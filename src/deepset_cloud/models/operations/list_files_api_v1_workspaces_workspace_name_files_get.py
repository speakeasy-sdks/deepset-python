"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.components import filepagination as components_filepagination
from enum import Enum
from typing import Any, Optional

class ListFilesAPIV1WorkspacesWorkspaceNameFilesGetQueryParamField(str, Enum):
    r"""The name of the entity you want to sort by."""
    CREATED_AT = 'created_at'
    NAME = 'name'

class ListFilesAPIV1WorkspacesWorkspaceNameFilesGetQueryParamOrder(str, Enum):
    r"""Choose how you want to sort the results."""
    ASC = 'ASC'
    DESC = 'DESC'


@dataclasses.dataclass
class ListFilesAPIV1WorkspacesWorkspaceNameFilesGetRequest:
    workspace_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'workspace_name', 'style': 'simple', 'explode': False }})
    r"""Type the name of the workspace."""
    after_file_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'after_file_id', 'style': 'form', 'explode': True }})
    r"""Enter a file ID if you want to see all files after this file ID.You can only use this parameter in combination with the 'after_value' parameter. If you are using the default sorting by created_at, you can set this value to a datetime in iso format. Example: '2023-04-25T07:37:58.326042+00:00'."""
    after_value: Optional[Any] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'after_value', 'style': 'form', 'explode': True }})
    r"""Enter a value if you want to see all files that are sorted after this value and a file ID defined in the 'after_file_id' parameter. This value must match the type of the field you want to sort by. You can only use this parameter in combination with the 'after_file_id' parameter."""
    content: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'content', 'style': 'form', 'explode': True }})
    r"""What file do you want to see? Enter its content."""
    field: Optional[ListFilesAPIV1WorkspacesWorkspaceNameFilesGetQueryParamField] = dataclasses.field(default=ListFilesAPIV1WorkspacesWorkspaceNameFilesGetQueryParamField.CREATED_AT, metadata={'query_param': { 'field_name': 'field', 'style': 'form', 'explode': True }})
    r"""The name of the entity you want to sort by."""
    filter: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter', 'style': 'form', 'explode': True }})
    r"""The OData filter you want to use to in your query. It supports exact match and `AND` operations. For example, to filter for a metadata `category:news`, here's what the URL could look like: 'url = \\"https://api.cloud.deepset.ai/api/v1/workspaces/production/files?limit=10&filter=category eq 'news'\\"'. OData filters only work with cursor-based pagination (leave the `page_number` field blank to enable it).To learn more about the OData filter syntax, see: [Querying Data](https://www.odata.org/getting-started/basic-tutorial/#queryData)."""
    limit: Optional[int] = dataclasses.field(default=10, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""How many entries do you want to display? Leaving this field empty keeps the default and max 10 results are returned."""
    meta_key: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'meta_key', 'style': 'form', 'explode': True }})
    r"""Type the metadata key by which you want to filter the files.

    Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
    """
    meta_value: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'meta_value', 'style': 'form', 'explode': True }})
    r"""Type the metadata value by which you want to filter the files.

    Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
    """
    name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name', 'style': 'form', 'explode': True }})
    r"""What file do you want to see? Type its name."""
    order: Optional[ListFilesAPIV1WorkspacesWorkspaceNameFilesGetQueryParamOrder] = dataclasses.field(default=ListFilesAPIV1WorkspacesWorkspaceNameFilesGetQueryParamOrder.ASC, metadata={'query_param': { 'field_name': 'order', 'style': 'form', 'explode': True }})
    r"""Choose how you want to sort the results."""
    page_number: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page_number', 'style': 'form', 'explode': True }})
    r"""Which page do you want to see? Type the number."""
    



@dataclasses.dataclass
class ListFilesAPIV1WorkspacesWorkspaceNameFilesGetResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    file_pagination: Optional[components_filepagination.FilePagination] = dataclasses.field(default=None)
    r"""Successful Response"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

