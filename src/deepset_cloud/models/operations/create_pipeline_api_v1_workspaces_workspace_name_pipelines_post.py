"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import httpvalidationerror as shared_httpvalidationerror
from ..shared import pipelinename as shared_pipelinename
from typing import Optional



@dataclasses.dataclass
class CreatePipelineAPIV1WorkspacesWorkspaceNamePipelinesPostRequest:
    workspace_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'workspace_name', 'style': 'simple', 'explode': False }})
    r"""Type the name of the workspace."""
    dry_run: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'dry_run', 'style': 'form', 'explode': True }})
    r"""Validates the pipeline without actually storing it."""
    




@dataclasses.dataclass
class CreatePipelineAPIV1WorkspacesWorkspaceNamePipelinesPostResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    http_validation_error: Optional[shared_httpvalidationerror.HTTPValidationError] = dataclasses.field(default=None)
    r"""Validation Error"""
    pipeline_name: Optional[shared_pipelinename.PipelineName] = dataclasses.field(default=None)
    r"""Your pipeline was created."""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

