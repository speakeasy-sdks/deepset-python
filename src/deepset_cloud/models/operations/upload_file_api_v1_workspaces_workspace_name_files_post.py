"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.components import body_upload_file_api_v1_workspaces_workspace_name_files_post as components_body_upload_file_api_v1_workspaces_workspace_name_files_post
from enum import Enum
from typing import Dict, Optional

class FileWriteModeEnum(str, Enum):
    r"""The write mode determines how to handle uploading a file if it's already in the workspace. Your options are: keep the file with the same name, make the request fail if a file with the same name already exists, or overwrite the file. If you choose to overwrite, all files with the same name are overwritten."""
    KEEP = 'KEEP'
    OVERWRITE = 'OVERWRITE'
    FAIL = 'FAIL'


@dataclasses.dataclass
class UploadFileAPIV1WorkspacesWorkspaceNameFilesPostRequest:
    workspace_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'workspace_name', 'style': 'simple', 'explode': False }})
    r"""Type the name of the workspace."""
    body_upload_file_api_v1_workspaces_workspace_name_files_post: Optional[components_body_upload_file_api_v1_workspaces_workspace_name_files_post.BodyUploadFileAPIV1WorkspacesWorkspaceNameFilesPost] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'multipart/form-data' }})
    file_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'file_name', 'style': 'form', 'explode': True }})
    r"""How do you want to call your file? Use this field only if you're creating a file to upload. If you're uploading a ready file, leave this field empty."""
    write_mode: Optional[FileWriteModeEnum] = dataclasses.field(default=FileWriteModeEnum.KEEP, metadata={'query_param': { 'field_name': 'write_mode', 'style': 'form', 'explode': True }})
    r"""The write mode determines how to handle uploading a file if it's already in the workspace. Your options are: keep the file with the same name, make the request fail if a file with the same name already exists, or overwrite the file. If you choose to overwrite, all files with the same name are overwritten."""
    



@dataclasses.dataclass
class UploadFileAPIV1WorkspacesWorkspaceNameFilesPostResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    response_upload_file_api_v1_workspaces_workspace_name_files_post: Optional[Dict[str, str]] = dataclasses.field(default=None)
    r"""Your file's in the workspace."""
    

