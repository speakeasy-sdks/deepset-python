"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.components import modelmeta as components_modelmeta
from typing import List, Optional


@dataclasses.dataclass
class ListModelAPIV1ModelGetRequest:
    author: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'author', 'style': 'form', 'explode': True }})
    r"""Author from Hugging Face. The author of the model 'deepset/minilm-uncased-squad2' is 'deepset'."""
    node_type: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'node_type', 'style': 'form', 'explode': True }})
    r"""Type of the node. E.g. 'PromptNode'"""
    



@dataclasses.dataclass
class ListModelAPIV1ModelGetResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    response_get_model_api_v1_model_get: Optional[List[components_modelmeta.ModelMeta]] = dataclasses.field(default=None)
    r"""Successful Response"""
    

