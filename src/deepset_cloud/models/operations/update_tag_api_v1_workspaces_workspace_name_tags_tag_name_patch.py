"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from deepset_cloud import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateTagAPIV1WorkspacesWorkspaceNameTagsTagNamePatchTagParameters:
    r"""The parameters of the tag you want to update."""
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the tag."""
    



@dataclasses.dataclass
class UpdateTagAPIV1WorkspacesWorkspaceNameTagsTagNamePatchRequest:
    request_body: UpdateTagAPIV1WorkspacesWorkspaceNameTagsTagNamePatchTagParameters = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    tag_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'tag_name', 'style': 'simple', 'explode': False }})
    r"""Which tag do you want to update? Type its name here."""
    workspace_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'workspace_name', 'style': 'simple', 'explode': False }})
    r"""Type the name of the workspace."""
    



@dataclasses.dataclass
class UpdateTagAPIV1WorkspacesWorkspaceNameTagsTagNamePatchResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    

