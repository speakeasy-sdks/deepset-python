"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.components import externaluserinformation as components_externaluserinformation
from typing import Optional


@dataclasses.dataclass
class CreateExternalUserAPIV1WorkspacesWorkspaceNameSharedPrototypeUsersPostRequest:
    workspace_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'workspace_name', 'style': 'simple', 'explode': False }})
    r"""Type the name of the workspace."""
    existing_user_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'existing_user_id', 'style': 'form', 'explode': True }})
    r"""The ID of an existing external user"""
    



@dataclasses.dataclass
class CreateExternalUserAPIV1WorkspacesWorkspaceNameSharedPrototypeUsersPostResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    external_user_information: Optional[components_externaluserinformation.ExternalUserInformation] = dataclasses.field(default=None)
    r"""Created a shared link for an existing external user"""
    

