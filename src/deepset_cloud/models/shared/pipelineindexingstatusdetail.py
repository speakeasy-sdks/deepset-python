"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from deepset_cloud import utils


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class PipelineIndexingStatusDetail:
    r"""Successful Response"""
    failed_file_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('failed_file_count') }})
    r"""Files that failed during indexing"""
    indexed_file_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('indexed_file_count') }})
    r"""Files that were successfully indexed."""
    indexed_no_documents_file_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('indexed_no_documents_file_count') }})
    r"""Number of files that were indexed but did not create documents."""
    pending_file_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pending_file_count') }})
    r"""The number of pending files to be indexed"""
    total_file_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_file_count') }})
    r"""The total number of files assigned to a pipeline."""
    

