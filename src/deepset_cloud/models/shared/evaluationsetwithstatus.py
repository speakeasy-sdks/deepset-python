"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from deepset_cloud import utils
from enum import Enum
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EvaluationSetWithStatusOauthUser:
    r"""The user who created the evaluation set."""
    family_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('family_name') }})
    r"""Family name of a user"""
    given_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('given_name') }})
    r"""Given name of a user"""
    user_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user_id') }})
    


class EvaluationSetWithStatusEvaluationSetStatusAsStr(str, Enum):
    r"""An enumeration."""
    RECEIVED = 'RECEIVED'
    LABEL_EXTRACTION_STARTED = 'LABEL_EXTRACTION_STARTED'
    CONTEXT_MATCHING_STARTED = 'CONTEXT_MATCHING_STARTED'
    FINISHED = 'FINISHED'
    FAILED = 'FAILED'
    INVALID_FORMAT = 'INVALID_FORMAT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EvaluationSetWithStatus:
    created_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    r"""Datetime object, specifies when the evaluation set was created"""
    evaluation_set_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('evaluation_set_id') }})
    r"""Unique identifier of an evaluation set"""
    matched_labels: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('matched_labels') }})
    r"""The number of labels that were not matched"""
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Name of the evaluation set. By default, the name of the csv or Squad2 file."""
    status: EvaluationSetWithStatusEvaluationSetStatusAsStr = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""Shows you what is currently happening to the evaluation set."""
    total_labels: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_labels') }})
    r"""The total number of uploaded labels"""
    created_by: Optional[EvaluationSetWithStatusOauthUser] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_by'), 'exclude': lambda f: f is None }})
    r"""The user who created the evaluation set."""
    

