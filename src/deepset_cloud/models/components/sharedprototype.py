"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from .pipelinename import PipelineName
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from deepset_cloud import utils
from typing import List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SharedPrototype:
    created_by_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_by_id') }})
    r"""Unique ID of the user who created the shared prototype."""
    expiration_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiration_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    r"""The date after which the generated link will expire and become invalid. The expiration date must be within 60 days from the current date."""
    is_revoked: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_revoked') }})
    r"""If a prototype is revoked, it's no longer accessible with the link."""
    link: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('link') }})
    r"""The generated link to the shared pipelines."""
    pipeline_names: List[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pipeline_names') }})
    r"""Type the names of the pipelines you want to share."""
    shared_pipelines: List[PipelineName] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shared_pipelines') }})
    r"""The names of the pipelines which this prototype shares."""
    shared_prototype_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shared_prototype_id') }})
    r"""Unique ID of the shared prototype."""
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Explain how you expect the users to use this pipeline. Users who visit the shared prototype will see this text. For more information on how to set the right expectations regarding your pipeline, see [Guidelines for Onboarding Your Users](https://docs.cloud.deepset.ai/docs/guidelines-for-onboarding-your-users)."""
    show_files: Optional[bool] = dataclasses.field(default=False, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('show_files'), 'exclude': lambda f: f is None }})
    r"""Select `True` if you want your users to be able to see the files."""
    show_metadata_filters: Optional[bool] = dataclasses.field(default=False, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('show_metadata_filters'), 'exclude': lambda f: f is None }})
    r"""Select `True` if you want your users to be able to filter the documents by metadata."""
    

