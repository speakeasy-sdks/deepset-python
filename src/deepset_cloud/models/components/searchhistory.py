"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from .pipelinename import PipelineName
from .searchresulthistoryentry import SearchResultHistoryEntry
from .useridname import UserIDName
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from deepset_cloud import utils
from typing import List


@dataclasses.dataclass
class QueryRequest:
    r"""Query request"""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SearchHistory:
    duration: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('duration') }})
    r"""Duration in ms."""
    pipeline: PipelineName = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pipeline') }})
    request: QueryRequest = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('request') }})
    r"""Query request"""
    response: List[SearchResultHistoryEntry] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('response') }})
    r"""Response list from Haystack open source"""
    search_history_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('search_history_id') }})
    r"""Unique identifier of the search"""
    time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('time'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    r"""Timestamp when the query was sent"""
    user: UserIDName = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user') }})
    

