"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from deepset_cloud import utils
from enum import Enum
from typing import Any, List, Optional, Union


@dataclasses.dataclass
class DeepsetCloudDocumentContent:
    r"""Content of the document."""
    



@dataclasses.dataclass
class Content:
    pass

class ContentType(str, Enum):
    r"""Type of the content."""
    TEXT = 'text'
    TABLE = 'table'
    IMAGE = 'image'
    AUDIO = 'audio'


@dataclasses.dataclass
class DeepsetCloudDocumentFileReferenceObjectDeprecatedUseFilesInstead:
    r"""Object containing the `file_id` and `name` of a file. This is used to associate a document with a file."""
    



@dataclasses.dataclass
class DeepsetCloudDocumentMetadataOfFile:
    r"""The metadata of this document."""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeepsetCloudDocument:
    content_type: ContentType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('content_type') }})
    r"""Type of the content."""
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""ID of the document."""
    meta: DeepsetCloudDocumentMetadataOfFile = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meta') }})
    r"""The metadata of this document."""
    content: Optional[Union[str, DeepsetCloudDocumentContent, List[Any]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('content'), 'exclude': lambda f: f is None }})
    r"""Content of the document."""
    embedding: Optional[List[float]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('embedding'), 'exclude': lambda f: f is None }})
    r"""Embedding of the document."""
    file: Optional[DeepsetCloudDocumentFileReferenceObjectDeprecatedUseFilesInstead] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file'), 'exclude': lambda f: f is None }})
    r"""Object containing the `file_id` and `name` of a file. This is used to associate a document with a file."""
    result_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('result_id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier of the result."""
    score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('score'), 'exclude': lambda f: f is None }})
    r"""Shows the relevance score of the prediction."""
    

