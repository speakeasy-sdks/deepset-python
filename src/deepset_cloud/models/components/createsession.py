"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from deepset_cloud import utils
from enum import Enum
from typing import Optional

class FileWriteModeEnum(str, Enum):
    r"""An enumeration."""
    KEEP = 'KEEP'
    OVERWRITE = 'OVERWRITE'
    FAIL = 'FAIL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateSession:
    write_mode: Optional[FileWriteModeEnum] = dataclasses.field(default=FileWriteModeEnum.KEEP, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('write_mode'), 'exclude': lambda f: f is None }})
    r"""Determines how to handle files that already exist. You can KEEP the existing file, OVERWRITE it, or FAIL to ingest if a file with the same name is already in your workspace."""
    

