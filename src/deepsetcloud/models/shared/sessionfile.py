"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from deepsetcloud import utils
from enum import Enum
from typing import Optional

class SessionFileFileIngestionStatusEnumEnum(str, Enum):
    r"""An enumeration."""
    PENDING = 'PENDING'
    FAILED = 'FAILED'
    FINISHED = 'FINISHED'

class SessionFileFileIngestionStatusReasonEnumEnum(str, Enum):
    r"""An enumeration."""
    EMPTY_FILE = 'EMPTY_FILE'
    FILE_NOT_FOUND = 'FILE_NOT_FOUND'
    FAILED_TO_PARSE_META = 'FAILED_TO_PARSE_META'
    FILE_ALREADY_EXISTS = 'FILE_ALREADY_EXISTS'
    UNKNOWN_ERROR = 'UNKNOWN_ERROR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SessionFile:
    
    ingestion_status: SessionFileFileIngestionStatusEnumEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ingestion_status') }})
    r"""The ingestion status of the ingested file."""
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the ingested file."""
    file_ingestion_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file_ingestion_id'), 'exclude': lambda f: f is None }})
    r"""The ID of the ingested file."""
    ingestion_status_reason: Optional[SessionFileFileIngestionStatusReasonEnumEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ingestion_status_reason'), 'exclude': lambda f: f is None }})
    r"""The ingestion status message that explains the ingestion status. This is only available for files that failed to ingest."""
    