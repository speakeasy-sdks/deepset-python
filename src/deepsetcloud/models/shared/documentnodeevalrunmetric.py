"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from deepsetcloud import utils
from enum import Enum
from typing import Optional

class DocumentNodeEvalRunMetricNodeTypeEnum(str, Enum):
    r"""This node returns 'Document' objects, not 'Answer' objects."""
    DOCUMENT_NODE = 'document_node'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DocumentNodeEvalRunMetric:
    
    node_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('node_name') }})
    r"""The name of the evaluated pipeline node."""
    node_type: DocumentNodeEvalRunMetricNodeTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('node_type') }})
    r"""This node returns 'Document' objects, not 'Answer' objects."""
    integrated_mean_average_precision: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integrated_mean_average_precision'), 'exclude': lambda f: f is None }})
    r"""The mean average precision of the node when it's evaluated in the integrated mode. For more information, see [Experiments and Metrics](https://docs.cloud.deepset.ai/docs/experiments-and-metrics)."""
    integrated_mean_reciprocal_rank: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integrated_mean_reciprocal_rank'), 'exclude': lambda f: f is None }})
    r"""The mean reciprocal rank of the node when it's evaluated in the integrated mode. For more information, see [Experiments and Metrics](https://docs.cloud.deepset.ai/docs/experiments-and-metrics)."""
    integrated_normal_discounted_cumulative_gain: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integrated_normal_discounted_cumulative_gain'), 'exclude': lambda f: f is None }})
    r"""The normal discounted cumulative gain of the node when it's evaluated in integrated mode. For more information, see [Experiments and Metrics](https://docs.cloud.deepset.ai/docs/experiments-and-metrics)."""
    integrated_precision: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integrated_precision'), 'exclude': lambda f: f is None }})
    r"""The precision of the node when it's evaluated in integrated mode. For more information, see [Experiments and Metrics](https://docs.cloud.deepset.ai/docs/experiments-and-metrics)."""
    integrated_recall_multi_hit: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integrated_recall_multi_hit'), 'exclude': lambda f: f is None }})
    r"""The recall multi hit metric of the node when it's evaluated in integrated mode. For more information, see [Experiments and Metrics](https://docs.cloud.deepset.ai/docs/experiments-and-metrics)."""
    integrated_recall_single_hit: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integrated_recall_single_hit'), 'exclude': lambda f: f is None }})
    r"""The recall single hit metric of the node when it's evaluated in integrated mode. For more information, see [Experiments and Metrics](https://docs.cloud.deepset.ai/docs/experiments-and-metrics)."""
    